type Input = doc[preface[header[],Paras],Blocs]
type Blocs = () | div[Blocs],Blocs | p[],Blocs | note[Paras],Blocs
type Paras = () | p[],Paras

type Xhtml = html[head[T1],body[Blocks]]
type T1 = meta[],T1 | title[],T2
type T2 = () | meta[],T2
type Blocks = () 
  | h1[],Blocks
  | h2[],Blocks
  | h3[],Blocks
  | h4[],Blocks
  | h5[],Blocks
  | h6[],Blocks
  | h7[],Blocks
  | h8[],Blocks
  | h9[],Blocks
  | p[],Blocks
  | b[],Blocks
  | div[Blocks],Blocks

expr Rest2 =
  if Copy in () then rest
  else let rest = >Rest2 in
  if Copy in header[Any],Any then h3[<Copy],rest
  else _[<Copy],rest

expr RestHtml =
  if Copy in () then rest
  else let rest = >RestHtml in 
  if Copy in preface[Any],Any | note[Any],Any then <Rest2
  else <RestHtml


expr Body =
  if Copy in () then rest
  else if Copy in preface[Any],Any | note[Any],Any then >Body
  else _[let rest=() in <Body],>Body

expr AppHtml =
  let rest = () in
  let rest = div[ h2[], <RestHtml ] in
  html[ head[title[]], body[<Body]]

(*
expr Body = 
  if Copy in () then ()
  else if Copy in preface[Any],Any | note[Any],Any then >Body
  else _[<Body],>Body

expr Append = if Copy in () then rest else _[<Copy],>Append

expr AppHtml =
  html[ head[title[]], body[ 
       (<Body; 
        let rest = div[ h2[], let rest = () in <RestHtml] in Append) ] ]
*)

check AppHtml: Input -> Xhtml

(* eval AppHtml doc[ preface[header[],p[]] ] *)


(* eval (let x = b[] in x; x[Copy],y[Copy]) a[] *)