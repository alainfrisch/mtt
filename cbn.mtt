expr Pick =
  if Copy in _[] then Copy
  else if rand(Any) in () then _[/Copy] else !Pick

type T = m[a[]],a[] | m[b[]],b[]

infer (let a = Pick in m[a],a) in T
infer (letn a = Pick in m[a],a) in T


expr Append(tl) =
  if Copy in () then tl
  else (_[/Copy],!Append(tl))

expr Concat(l1;l2) = (l1; Append(l2))

eval (c[],d[]; Concat(a[],b[];Copy))